 # 👨‍💻 Hệ thống Nhận diện Khuôn mặt

Một hệ thống nhận diện khuôn mặt hoàn chỉnh sử dụng OpenCV và Python, hỗ trợ cả phát hiện khuôn mặt cơ bản và nhận diện người dùng cụ thể.

## 📋 Yêu cầu hệ thống

- **Python**: 3.7 - 3.11 (khuyến nghị 3.9+)
- **Hệ điều hành**: Windows 10/11, macOS, Linux
- **RAM**: Tối thiểu 4GB (khuyến nghị 8GB+)
- **Webcam**: Tùy chọn (cho chế độ thời gian thực)

## 🛠️ Cài đặt

### Bước 1: Clone hoặc tải dự án

```bash
git clone <repository-url>
cd face-detection
```

### Bước 2: Tạo môi trường ảo (khuyến nghị)

```bash
# Windows
python -m venv venv
venv\Scripts\activate

# macOS/Linux
python3 -m venv venv
source venv/bin/activate
```

### Bước 3: Cài đặt thư viện

#### Cài đặt từ requirements.txt (khuyến nghị):

```bash
pip install -r requirements.txt
```

#### Hoặc cài đặt từng thư viện:

```bash
# Thư viện chính
pip install opencv-python==4.8.1.78
pip install opencv-contrib-python==4.8.1.78
pip install numpy==1.24.3

# Thư viện bổ sung
pip install argparse  # Đã có sẵn trong Python 3.2+
pip install json      # Đã có sẵn
pip install pickle    # Đã có sẵn
pip install datetime  # Đã có sẵn
pip install os        # Đã có sẵn
pip install time      # Đã có sẵn
```

### Bước 4: Tạo file requirements.txt (nếu chưa có)

```txt
opencv-python==4.8.1.78
opencv-contrib-python==4.8.1.78
numpy==1.24.3
```

## 📁 Cấu trúc thư mục

```
face-detection/
├── haarcascades/                 # Thư mục chứa code chính
│   ├── detect_from_image.py     # Nhận diện từ ảnh
│   ├── detect_from_webcam.py    # Nhận diện từ webcam
│   ├── face_detector.py         # Class phát hiện khuôn mặt
│   ├── face_recognizer.py       # Class nhận diện người dùng
│   ├── manage_users.py          # Quản lý cơ sở dữ liệu người dùng
│   └── haarcascade_frontalface_default.xml
├── images/                      # Thư mục chứa ảnh đầu vào
├── results/                     # Thư mục chứa kết quả
├── user_data/                   # Dữ liệu người dùng (tự động tạo)
└── readme.md                    # File hướng dẫn này
```

## 🚀 Hướng dẫn sử dụng

### 1. Phát hiện khuôn mặt từ ảnh

```bash
cd haarcascades

# Phát hiện khuôn mặt cơ bản
python detect_from_image.py --image test.jpg

# Với tùy chọn thêm
python detect_from_image.py --image test.jpg --resize 800x600 --extract-faces
```

**Tham số có thể sử dụng:**
- `--image`: Tên file ảnh (bắt buộc)
- `--cascade`: File cascade (mặc định: haarcascade_frontalface_default.xml)
- `--output`: Tên file kết quả
- `--resize`: Kích thước đầu ra (vd: 800x600 hoặc 0.5)
- `--extract-faces`: Lưu từng khuôn mặt riêng biệt

### 2. Nhận diện khuôn mặt từ webcam

```bash
# Phát hiện cơ bản
python detect_from_webcam.py

# Liệt kê camera khả dụng
python detect_from_webcam.py --list-cameras

# Với các tùy chọn
python detect_from_webcam.py --camera 0 --save-video --fps 30
```

**Phím điều khiển:**
- `q`: Thoát chương trình
- `s`: Chụp ảnh màn hình

**Tham số webcam:**
- `--camera`: Chỉ số camera (0, 1, 2...)
- `--save-video`: Lưu video kết quả
- `--width/--height`: Độ phân giải camera
- `--brightness/--contrast`: Điều chỉnh camera

### 3. Quản lý người dùng

#### Thêm người dùng mới:
```bash
python manage_users.py add --id khiem --name "Nguyen Van Khiem" --image khiem1.jpg
```

#### Liệt kê tất cả người dùng:
```bash
python manage_users.py list
```

#### Thêm ảnh khuôn mặt bổ sung:
```bash
python manage_users.py add-face --id khiem --image khiem2.jpg
```

#### Liệt kê ảnh của một người dùng:
```bash
python manage_users.py list-faces --id khiem
```

#### Xóa ảnh khuôn mặt:
```bash
python manage_users.py remove-face --id khiem --index 1
```

#### Xóa người dùng:
```bash
python manage_users.py delete --id khiem
```

### 4. Nhận diện người dùng đã đăng ký

```bash
# Từ ảnh
python detect_from_image.py --image test.jpg --recognition-mode --confidence 50

# Từ webcam
python detect_from_webcam.py --recognition-mode --confidence 50 --show-details
```

**Tham số nhận diện:**
- `--recognition-mode`: Bật chế độ nhận diện người dùng
- `--confidence`: Ngưỡng độ tin cậy (0-100, thấp = nghiêm ngặt hơn)
- `--show-details`: Hiển thị thông tin chi tiết

## 🔧 Xử lý lỗi thường gặp

### 1. Lỗi import cv2
```bash
# Gỡ cài đặt phiên bản cũ
pip uninstall opencv-python opencv-contrib-python

# Cài đặt lại
pip install opencv-python==4.8.1.78
pip install opencv-contrib-python==4.8.1.78
```

### 2. Lỗi không tìm thấy camera
```bash
# Kiểm tra camera khả dụng
python detect_from_webcam.py --list-cameras

# Thử camera khác
python detect_from_webcam.py --camera 1
```

### 3. Lỗi file không tồn tại
- Đảm bảo ảnh đầu vào được đặt trong thư mục `images/`
- Kiểm tra tên file chính xác (phân biệt hoa thường)

### 4. Lỗi Face Recognizer
```bash
# Cài đặt opencv-contrib-python (chứa face recognition)
pip install opencv-contrib-python==4.8.1.78
```

## 📊 Cấu trúc dữ liệu

### File cơ sở dữ liệu người dùng (user_data/users_database.json):
```json
{
  "user_id": {
    "name": "Tên người dùng",
    "face_image": "đường/dẫn/ảnh.jpg",
    "created_at": "2024-01-01 10:00:00",
    "last_recognized": "2024-01-01 15:30:00"
  }
}
```

## 💡 Gợi ý tối ưu

### Chất lượng ảnh huấn luyện:
- Sử dụng ảnh có độ phân giải cao (tối thiểu 200x200 pixel)
- Ánh sáng đều, không quá tối hoặc quá sáng
- Khuôn mặt nhìn thẳng vào camera
- Không bị che khuất bởi kính, khẩu trang

### Cài đặt tham số:
- **Confidence threshold**: 30-70 (thấp = nghiêm ngặt, cao = dễ dãi)
- **Camera resolution**: 640x480 hoặc 1280x720
- **FPS**: 20-30 cho webcam

## 🆘 Hỗ trợ

### Kiểm tra phiên bản:
```python
import cv2
import numpy as np
print(f"OpenCV version: {cv2.__version__}")
print(f"NumPy version: {np.__version__}")
```

### Test cơ bản:
```python
import cv2
# Test camera
cap = cv2.VideoCapture(0)
if cap.isOpened():
    print("Camera hoạt động bình thường")
    cap.release()
else:
    print("Không thể mở camera")
```

## 📝 Ghi chú phiên bản

- **Python 3.7-3.11**: Được hỗ trợ đầy đủ
- **OpenCV 4.8.1.78**: Phiên bản ổn định, có đầy đủ tính năng
- **NumPy 1.24.3**: Tương thích tốt với OpenCV

**Lưu ý**: Tránh sử dụng Python 3.12+ vì có thể có vấn đề tương thích với một số phiên bản OpenCV.

## 🔄 Cập nhật

Để cập nhật lên phiên bản mới:
```bash
pip install --upgrade opencv-python opencv-contrib-python numpy
```

---

**Tác giả**: [Tên của bạn]  
**Ngày tạo**: [Ngày hiện tại]  
**Phiên bản**: 1.0.0